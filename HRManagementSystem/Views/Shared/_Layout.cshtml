<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - HR Management System</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/select2-bootstrap-5-theme@1.3.0/dist/select2-bootstrap-5-theme.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/dataTables.bootstrap5.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <style>
        :root {
            --primary-color: #2c3e50;
            --secondary-color: #3498db;
            --accent-color: #e74c3c;
            --success-color: #27ae60;
            --warning-color: #f39c12;
            --info-color: #17a2b8;
            --light-color: #f8f9fa;
            --dark-color: #343a40;
            --gradient-primary: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            --gradient-secondary: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
            --gradient-success: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
            --shadow-light: 0 2px 4px rgba(0,0,0,0.1);
            --shadow-medium: 0 4px 6px rgba(0,0,0,0.1);
            --shadow-heavy: 0 8px 25px rgba(0,0,0,0.15);
            --border-radius: 8px;
            --transition: all 0.3s ease;
        }

        * {
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            color: var(--dark-color);
            background-color: #f5f7fa;
            overflow-x: hidden;
        }

        /* Enhanced Navbar */
        .navbar {
            background: var(--gradient-primary) !important;
            box-shadow: var(--shadow-medium);
            padding: 1rem 0;
            backdrop-filter: blur(10px);
            position: sticky;
            top: 0;
            z-index: 1030;
        }

        .navbar-brand {
            font-weight: 700;
            font-size: 1.5rem;
            color: white !important;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

            .navbar-brand i {
                font-size: 1.8rem;
                color: #ffd700;
            }

        .navbar-nav .nav-link {
            color: rgba(255, 255, 255, 0.9) !important;
            font-weight: 500;
            padding: 0.5rem 1rem !important;
            border-radius: var(--border-radius);
            transition: var(--transition);
            position: relative;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

            .navbar-nav .nav-link:hover,
            .navbar-nav .nav-link:focus {
                color: white !important;
                background-color: rgba(255, 255, 255, 0.1);
                transform: translateY(-2px);
            }

            .navbar-nav .nav-link.active {
                color: white !important;
                background-color: rgba(255, 255, 255, 0.2);
            }

            .navbar-nav .nav-link i {
                font-size: 1.1rem;
                opacity: 0.8;
            }

        /* Mobile Navigation */
        .navbar-toggler {
            border: none;
            padding: 0.25rem 0.5rem;
            background-color: rgba(255, 255, 255, 0.1);
            border-radius: var(--border-radius);
        }

            .navbar-toggler:focus {
                box-shadow: none;
            }

        .navbar-toggler-icon {
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='rgba%28255, 255, 255, 0.85%29' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e");
        }

        /* Dropdown Menu */
        .dropdown-menu {
            background: white;
            border: none;
            box-shadow: var(--shadow-heavy);
            border-radius: var(--border-radius);
            padding: 0.5rem 0;
            margin-top: 0.5rem;
        }

        .dropdown-item {
            padding: 0.7rem 1.2rem;
            color: var(--dark-color);
            font-weight: 500;
            transition: var(--transition);
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

            .dropdown-item:hover,
            .dropdown-item:focus {
                background-color: var(--light-color);
                color: var(--primary-color);
                transform: translateX(5px);
            }

            .dropdown-item i {
                width: 20px;
                opacity: 0.7;
            }

        /* Real-time Status */
        .realtime-indicator {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            background: rgba(255, 255, 255, 0.1);
            padding: 0.3rem 0.8rem;
            border-radius: 20px;
            font-size: 0.85rem;
            margin-left: 1rem;
        }

        .connection-status {
            width: 10px;
            height: 10px;
            border-radius: 50%;
            background-color: var(--accent-color);
            animation: pulse 1.5s infinite;
        }

            .connection-status.connected {
                background-color: var(--success-color);
                animation: none;
            }

            .connection-status.processing {
                background-color: var(--warning-color);
                animation: pulse 0.5s infinite;
            }

        keyframes pulse {
            0%

        {
            opacity: 1;
            transform: scale(1);
        }

        50% {
            opacity: 0.5;
            transform: scale(1.1);
        }

        100% {
            opacity: 1;
            transform: scale(1);
        }

        }

        /* Main Content Area */
        .main-content {
            min-height: calc(100vh - 200px);
            padding: 2rem 0;
        }

        .container {
            max-width: 1200px;
        }

        /* Enhanced Alert Messages */
        .alert {
            border: none;
            border-radius: var(--border-radius);
            padding: 1rem 1.5rem;
            margin-bottom: 1.5rem;
            box-shadow: var(--shadow-light);
            border-left: 4px solid;
        }

        .alert-success {
            background-color: #d4edda;
            color: #155724;
            border-left-color: var(--success-color);
        }

        .alert-danger {
            background-color: #f8d7da;
            color: #721c24;
            border-left-color: var(--accent-color);
        }

        .alert-info {
            background-color: #d1ecf1;
            color: #0c5460;
            border-left-color: var(--info-color);
        }

        .alert-warning {
            background-color: #fff3cd;
            color: #856404;
            border-left-color: var(--warning-color);
        }

        /* Button Enhancements */
        .btn {
            border-radius: var(--border-radius);
            font-weight: 500;
            padding: 0.6rem 1.5rem;
            transition: var(--transition);
            text-transform: none;
            letter-spacing: 0.5px;
            position: relative;
            overflow: hidden;
        }

            .btn::before {
                content: '';
                position: absolute;
                top: 0;
                left: -100%;
                width: 100%;
                height: 100%;
                background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
                transition: var(--transition);
            }

            .btn:hover::before {
                left: 100%;
            }

        .btn-primary {
            background: var(--gradient-primary);
            border: none;
            color: white;
        }

            .btn-primary:hover {
                background: var(--gradient-primary);
                transform: translateY(-2px);
                box-shadow: var(--shadow-medium);
            }

        .btn-success {
            background: var(--gradient-success);
            border: none;
            color: white;
        }

            .btn-success:hover {
                background: var(--gradient-success);
                transform: translateY(-2px);
                box-shadow: var(--shadow-medium);
            }

        /* Enhanced Footer */
        .footer {
            background: var(--primary-color);
            color: rgba(255, 255, 255, 0.8);
            padding: 2rem 0;
            margin-top: 3rem;
        }

            .footer .container {
                display: flex;
                justify-content: space-between;
                align-items: center;
                flex-wrap: wrap;
            }

        .footer-links {
            display: flex;
            gap: 2rem;
            align-items: center;
        }

            .footer-links a {
                color: rgba(255, 255, 255, 0.6);
                text-decoration: none;
                transition: var(--transition);
            }

                .footer-links a:hover {
                    color: white;
                }

        /* Notification Toasts */
        .notification-toast {
            position: fixed;
            top: 90px;
            right: 20px;
            z-index: 1050;
            min-width: 320px;
            max-width: 400px;
        }

            .notification-toast .alert {
                margin-bottom: 0.5rem;
                border-radius: var(--border-radius);
                box-shadow: var(--shadow-heavy);
                animation: slideIn 0.3s ease;
            }

        keyframes slideIn {
            from

        {
            transform: translateX(100%);
            opacity: 0;
        }

        to {
            transform: translateX(0);
            opacity: 1;
        }

        }

        /* Loading Spinner */
        .refresh-indicator {
            animation: spin 1s linear infinite;
        }

        keyframes spin {
            0%

        {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }

        }

        /* Table Enhancements */
        .attendance-table {
            font-size: 0.9rem;
            background: white;
            border-radius: var(--border-radius);
            overflow: hidden;
            box-shadow: var(--shadow-light);
        }

            .attendance-table th {
                background: var(--gradient-primary);
                color: white;
                font-weight: 600;
                text-align: center;
                vertical-align: middle;
                padding: 1rem 0.5rem;
                border: none;
            }

            .attendance-table td {
                text-align: center;
                vertical-align: middle;
                padding: 0.8rem 0.5rem;
                border-bottom: 1px solid #eee;
            }

            .attendance-table tbody tr:hover {
                background-color: var(--light-color);
                transform: scale(1.01);
                transition: var(--transition);
            }

        .designation-header {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            font-weight: 600;
            color: var(--primary-color);
        }

        /* Responsive Design */
        media (max-width: 768px) {
            .navbar-brand

        {
            font-size: 1.2rem;
        }

        .navbar-nav {
            padding: 1rem 0;
            background: rgba(255, 255, 255, 0.1);
            border-radius: var(--border-radius);
            margin-top: 1rem;
        }

            .navbar-nav .nav-link {
                padding: 0.8rem 1rem !important;
                margin: 0.2rem 0;
            }

        .realtime-indicator {
            display: none;
        }

        .container {
            padding: 0 1rem;
        }

        .main-content {
            padding: 1rem 0;
        }

        .footer .container {
            flex-direction: column;
            gap: 1rem;
            text-align: center;
        }

        .footer-links {
            flex-direction: column;
            gap: 1rem;
        }

        .notification-toast {
            right: 10px;
            left: 10px;
            min-width: auto;
        }

        }

        media (max-width: 576px) {
            .navbar

        {
            padding: 0.5rem 0;
        }

        .navbar-brand {
            font-size: 1rem;
        }

        .btn {
            padding: 0.5rem 1rem;
            font-size: 0.9rem;
        }

        .attendance-table {
            font-size: 0.8rem;
        }

            .attendance-table th,
            .attendance-table td {
                padding: 0.5rem 0.3rem;
            }

        }

        /* Tablet Styles */
        media (min-width: 768px) and (max-width: 1024px) {
            .container

        {
            max-width: 100%;
            padding: 0 2rem;
        }

        .navbar-nav .nav-link {
            padding: 0.6rem 1rem !important;
        }

        }

        /* Desktop Enhancements */
        media (min-width: 1200px) {
            .container

        {
            max-width: 1140px;
        }

        .main-content {
            padding: 3rem 0;
        }

        }

        /* Enhanced Form Elements */
        .form-control,
        .form-select {
            border-radius: var(--border-radius);
            border: 2px solid #e9ecef;
            padding: 0.7rem 1rem;
            transition: var(--transition);
            font-size: 0.95rem;
        }

            .form-control:focus,
            .form-select:focus {
                border-color: var(--secondary-color);
                box-shadow: 0 0 0 0.2rem rgba(52, 152, 219, 0.25);
            }

        .form-label {
            font-weight: 600;
            color: var(--dark-color);
            margin-bottom: 0.5rem;
        }

        /* Card Enhancements */
        .card {
            border: none;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow-light);
            transition: var(--transition);
        }

            .card:hover {
                box-shadow: var(--shadow-medium);
                transform: translateY(-5px);
            }

        .card-header {
            background: var(--gradient-primary);
            color: white;
            font-weight: 600;
            border-radius: var(--border-radius) var(--border-radius) 0 0 !important;
        }

        /* Badge Enhancements */
        .badge {
            border-radius: 12px;
            font-weight: 500;
            padding: 0.4rem 0.8rem;
        }

        /* Accessibility Enhancements */
        .btn:focus,
        .nav-link:focus,
        .dropdown-item:focus {
            outline: 2px solid var(--secondary-color);
            outline-offset: 2px;
        }

        /* Print Styles */
        media print {
            .navbar, .footer, .btn, .alert

        {
            display: none !important;
        }

        }
    </style>
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-lg navbar-dark">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">
                    <i class="fas fa-users-cog"></i>
                    <span>HR Management System</span>
                    @if (User.Identity.IsAuthenticated)
                    {
                        <span class="realtime-indicator">
                            <span class="connection-status" id="connectionStatus" title="Real-time connection status"></span>
                            <small>Live</small>
                        </span>
                    }
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav me-auto">
                        @if (User.Identity.IsAuthenticated)
                        {
                            <li class="nav-item">
                                <a class="nav-link @(ViewContext.RouteData.Values["Action"].ToString() == "Index" ? "active" : "")" asp-area="" asp-controller="Home" asp-action="Index">
                                    <i class="fas fa-tachometer-alt"></i>
                                    <span>Dashboard</span>
                                </a>
                            </li>

                            @if (User.IsInRole("Admin") || User.IsInRole("HR") || User.IsInRole("GM"))
                            {
                                <li class="nav-item dropdown">
                                    <a class="nav-link dropdown-toggle @(ViewContext.RouteData.Values["Action"].ToString() == "AttendanceReport" || ViewContext.RouteData.Values["Action"].ToString() == "DepartmentAttendance" ? "active" : "")" href="#" id="attendanceDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                        <i class="fas fa-calendar-check"></i>
                                        <span>Attendance</span>
                                    </a>
                                    <ul class="dropdown-menu" aria-labelledby="attendanceDropdown">
                                        <li>
                                            <a class="dropdown-item @(ViewContext.RouteData.Values["Action"].ToString() == "AttendanceReport" ? "active" : "")" asp-area="" asp-controller="Home" asp-action="AttendanceReport">
                                                <i class="fas fa-list-ul"></i>
                                                <span>Daily Report</span>
                                            </a>
                                        </li>
                                        @if (User.IsInRole("Admin") || User.IsInRole("HR"))
                                        {
                                            <li>
                                                <a class="dropdown-item @(ViewContext.RouteData.Values["Action"].ToString() == "DepartmentAttendance" ? "active" : "")" asp-area="" asp-controller="Home" asp-action="DepartmentAttendance">
                                                    <i class="fas fa-chart-bar"></i>
                                                    <span>Department Attendance</span>
                                                </a>
                                            </li>
                                            <li>
                                                <a class="dropdown-item @(ViewContext.RouteData.Values["Action"].ToString() == "Attendancesummary" ? "active" : "")" asp-area="" asp-controller="AttendanceSummary" asp-action="Index">
                                                    <i class="fas fa-chart-bar"></i>
                                                    <span>Date Wise summary</span>
                                                </a>
                                            </li>
                                            <li>
                                                <a class="dropdown-item @(ViewContext.RouteData.Values["Controller"].ToString() == "EmployeeStatus" ? "active" : "")"
                                                   asp-controller="EmployeeStatus" asp-action="Index">
                                                    <i class="fas fa-users-cog"></i>
                                                    <span>Daily Status Report</span>
                                                </a>
                                            </li>
                                        }
                                       @*  <li>
                                            <a class="dropdown-item @(ViewContext.RouteData.Values["Action"].ToString() == "CategoryAttendanceReport" ? "active" : "")" asp-controller="Home" asp-action="CategoryAttendanceReport">
                                                <i class="fas fa-chart-pie"></i>
                                                <span>Category Reports</span>
                                            </a>
                                        </li> *@
                                    </ul>
                                </li>
                            }

                            @if (User.IsInRole("Admin"))
                            {
                                <li class="nav-item">
                                    <a class="nav-link @(ViewContext.RouteData.Values["Action"].ToString() == "Users" ? "active" : "")" asp-area="" asp-controller="Admin" asp-action="Users">
                                        <i class="fas fa-users-cog"></i>
                                        <span>Manage Users</span>
                                    </a>
                                </li>
                            }
                        }
                    </ul>
                    <ul class="navbar-nav">
                        @if (User.Identity.IsAuthenticated)
                        {
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="fas fa-user-circle"></i>
                                    <span class="d-none d-md-inline">@User.Identity.Name</span>
                                    <small class="d-block d-md-none text-muted">@User.FindFirst(System.Security.Claims.ClaimTypes.Role)?.Value</small>
                                </a>
                                <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown">
                                    <li class="dropdown-item-text">
                                        <div class="d-flex flex-column">
                                            <span class="fw-bold">@User.Identity.Name</span>
                                            <small class="text-muted">@User.FindFirst(System.Security.Claims.ClaimTypes.Role)?.Value</small>
                                        </div>
                                    </li>
                                    <li><hr class="dropdown-divider"></li>
                                    <li>
                                        <a class="dropdown-item" href="#" onclick="showProfile()">
                                            <i class="fas fa-user-edit"></i>
                                            <span>Profile</span>
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item" href="#" onclick="showSettings()">
                                            <i class="fas fa-cogs"></i>
                                            <span>Settings</span>
                                        </a>
                                    </li>
                                    <li><hr class="dropdown-divider"></li>
                                    <li>
                                        <a class="dropdown-item" asp-area="" asp-controller="Account" asp-action="Logout">
                                            <i class="fas fa-sign-out-alt"></i>
                                            <span>Logout</span>
                                        </a>
                                    </li>
                                </ul>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item">
                                <a class="nav-link" asp-area="" asp-controller="Account" asp-action="Login">
                                    <i class="fas fa-sign-in-alt"></i>
                                    <span>Login</span>
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <!-- Toast Notification Container -->
    <div id="notificationContainer" class="notification-toast"></div>

    <div class="container-fluid main-content">
        <main role="main">
            @if (TempData["Success"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="fas fa-check-circle me-2"></i>
                    <strong>Success!</strong> @TempData["Success"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }
            @if (TempData["Error"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    <strong>Error!</strong> @TempData["Error"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }
            @RenderBody()
        </main>
    </div>

    <footer class="footer">
        <div class="container">
            <div class="footer-content">
                <span>&copy; 2025 HR Management System - Real-time Attendance Monitoring</span>
            </div>
            <div class="footer-links">
                <a href="#" onclick="showAbout()">About</a>
                <a href="#" onclick="showHelp()">Help</a>
                <a href="#" onclick="showContact()">Contact</a>
            </div>
        </div>
    </footer>

    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    @if (User.Identity.IsAuthenticated)
    {
        <!-- SignalR JavaScript Library -->
        <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.0/signalr.min.js"></script>
        <script>
            // SignalR Connection
            const connection = new signalR.HubConnectionBuilder()
                .withUrl("/attendanceHub")
                .withAutomaticReconnect([0, 2000, 10000, 30000])
                .build();

            // Connection status elements
            const connectionStatus = document.getElementById('connectionStatus');

            // Start connection
            connection.start().then(function () {
                console.log('SignalR Connected');
                connectionStatus.classList.add('connected');
                connectionStatus.title = 'Connected to real-time updates';

                // Join company group based on user role
                @{
                            var userCompanyCode = User.FindFirst("CompanyCode")?.Value ?? "0";
                            var userRole = User.FindFirst(System.Security.Claims.ClaimTypes.Role)?.Value;
                }

                @if (userRole != "Admin")
                {
                            <text>
                            if ('@userCompanyCode' !== '0') {
                                connection.invoke("JoinCompanyGroup", '@userCompanyCode');
                            }
                            </text>
                }
            }).catch(function (err) {
                console.error('SignalR Connection Error: ', err.toString());
                connectionStatus.classList.remove('connected');
                connectionStatus.title = 'Disconnected from real-time updates';
            });

            // Reconnection events
            connection.onreconnecting((error) => {
                console.log('SignalR Reconnecting...', error);
                connectionStatus.classList.remove('connected');
                connectionStatus.classList.add('processing');
                connectionStatus.title = 'Reconnecting to real-time updates...';
            });

            connection.onreconnected((connectionId) => {
                console.log('SignalR Reconnected', connectionId);
                connectionStatus.classList.remove('processing');
                connectionStatus.classList.add('connected');
                connectionStatus.title = 'Connected to real-time updates';
            });

            connection.onclose((error) => {
                console.log('SignalR Connection Closed', error);
                connectionStatus.classList.remove('connected', 'processing');
                connectionStatus.title = 'Disconnected from real-time updates';
            });

            // Handle attendance updates
            connection.on("AttendanceUpdated", function (data) {
                console.log('Attendance Updated:', data);

                // Update attendance cards if on attendance report page
                if (window.location.pathname.includes('AttendanceReport')) {
                    updateAttendanceCards(data);
                    showNotification('Attendance data updated!', 'success');
                }
            });

            // Handle processing status
            connection.on("AttendanceProcessing", function (data) {
                console.log('Attendance Processing:', data);

                if (data.IsProcessing) {
                    connectionStatus.classList.add('processing');
                    connectionStatus.title = 'Processing attendance data...';
                } else {
                    connectionStatus.classList.remove('processing');
                    connectionStatus.title = 'Connected to real-time updates';
                }
            });

            // Handle errors
            connection.on("AttendanceError", function (data) {
                console.error('Attendance Error:', data);
                showNotification(data.Message, 'error');
            });

            // Utility functions
            function updateAttendanceCards(data) {
                // Update the summary cards with new data
                const totalCard = document.querySelector('.card.bg-primary h5');
                const presentCard = document.querySelector('.card.bg-success h5');
                const absentCard = document.querySelector('.card.bg-danger h5');
                const lastUpdated = document.getElementById('lastUpdated');

                if (totalCard) totalCard.textContent = data.TotalEmployees;
                if (presentCard) presentCard.textContent = data.PresentEmployees;
                if (absentCard) absentCard.textContent = data.AbsentEmployees;
                if (lastUpdated) lastUpdated.textContent = 'Last updated: ' + data.LastUpdated;

                // Optionally reload the table data
                if (typeof refreshAttendanceTable === 'function') {
                    refreshAttendanceTable();
                }
            }

            function showNotification(message, type) {
                const container = document.getElementById('notificationContainer');
                const alertClass = type === 'success' ? 'alert-success' : 'alert-danger';
                const icon = type === 'success' ? 'fas fa-check-circle' : 'fas fa-exclamation-triangle';

                const notification = document.createElement('div');
                notification.className = `alert ${alertClass} alert-dismissible fade show`;
                notification.innerHTML = `
                    <i class="${icon} me-2"></i>
                    <strong>${type === 'success' ? 'Success!' : 'Error!'}</strong> ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                `;

                container.appendChild(notification);

                // Auto remove after 5 seconds
                setTimeout(() => {
                    if (notification.parentNode) {
                        notification.classList.remove('show');
                        setTimeout(() => notification.remove(), 300);
                    }
                }, 5000);
            }

            // Global function to manually refresh attendance
            window.refreshAttendance = function() {
                const refreshBtn = document.getElementById('refreshBtn');
                const refreshIcon = document.getElementById('refreshIcon');

                if (refreshBtn) {
                    refreshBtn.disabled = true;
                    if (refreshIcon) refreshIcon.classList.add('refresh-indicator');
                }

                fetch('@Url.Action("RefreshAttendance", "Home")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        showNotification('Attendance refresh triggered!', 'success');
                    } else {
                        showNotification(data.message || 'Failed to refresh attendance', 'error');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showNotification('Error refreshing attendance data', 'error');
                })
                .finally(() => {
                    if (refreshBtn) {
                        refreshBtn.disabled = false;
                        if (refreshIcon) refreshIcon.classList.remove('refresh-indicator');
                    }
                });
            };

            // Utility functions for footer links
            function showProfile() {
                showNotification('Profile page coming soon!', 'info');
            }

            function showSettings() {
                showNotification('Settings page coming soon!', 'info');
            }

            function showAbout() {
                showNotification('About page coming soon!', 'info');
            }

            function showHelp() {
                showNotification('Help page coming soon!', 'info');
            }

            function showContact() {
                showNotification('Contact page coming soon!', 'info');
            }
        </script>
    }

    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap5.min.js"></script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>