@model HRManagementSystem.Models.AttendanceSummaryViewModel
@{
    ViewData["Title"] = "Attendance Summary Report";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*     <div class="container-fluid px-2">
        <div class="row"> *@
<div class="col-12">
    <div class="card shadow-lg">
        <div class="card-header bg-gradient-primary text-white py-3">
            <h2 class="card-title mb-0 text-center">
                <i class="fas fa-chart-bar fa-lg"></i> <span style="font-size: 28px; font-weight: bold;">ATTENDANCE SUMMARY REPORT</span>
            </h2>
        </div>
        <div class="card-body">
            <div class="filter-section mb-4">
                <form id="filterForm">
                    <div class="row">
                        <div class="col-lg-2 col-md-4 col-sm-6">
                            <div class="form-group">
                                <label for="fromDate">From Date <span class="text-danger">*</span></label>
                                <input type="date" class="form-control" id="fromDate" asp-for="FromDate" required>
                            </div>
                        </div>
                        <div class="col-lg-2 col-md-4 col-sm-6">
                            <div class="form-group">
                                <label for="toDate">To Date <span class="text-danger">*</span></label>
                                <input type="date" class="form-control" id="toDate" asp-for="ToDate" required>
                            </div>
                        </div>

                        @if (ViewBag.UserRole == "Admin")
                        {
                            <div class="col-lg-2 col-md-4 col-sm-6">
                                <div class="form-group">
                                    <label for="companyCode">Company</label>
                                    @Html.DropDownListFor(m => m.SelectedCompanyCode, Model.Companies, "All Companies", new { @class = "form-control", id = "companyCode" })
                                </div>
                            </div>
                        }
                        else
                        {
                            <input type="hidden" id="companyCode" value="@Model.SelectedCompanyCode" />
                        }

                        <div class="col-lg-2 col-md-4 col-sm-6">
                            <div class="form-group">
                                <label for="department">Department</label>
                                <select class="form-control" id="department">
                                    <option value="">All Departments</option>
                                </select>
                            </div>
                        </div>

                        <div class="col-lg-2 col-md-4 col-sm-6">
                            <div class="form-group">
                                <label for="category">Category</label>
                                <select class="form-control" id="category">
                                    <option value="">All Categories</option>
                                </select>
                            </div>
                        </div>

                        <div class="col-lg-2 col-md-4 col-sm-6">
                            <div class="form-group">
                                <label for="designation">Designation</label>
                                <select class="form-control" id="designation">
                                    <option value="">All Designations</option>
                                </select>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-lg-2 col-md-4 col-sm-6">
                            <div class="form-group">
                                <label for="attendanceStatus">Status</label>
                                <select class="form-control" id="attendanceStatus">
                                    <option value="All">All</option>
                                    <option value="Present">Present</option>
                                    <option value="Absent">Absent</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-lg-2 col-md-4 col-sm-6">
                            <div class="form-group">
                                <label for="longAbsentOption">Employee Filter</label>
                                <select class="form-control" id="longAbsentOption">
                                    <option value="All">All Employees</option>
                                    <option value="ExcludeLongAbsent" selected>Exclude Long Absent</option>
                                    <option value="OnlyLongAbsent">Only Long Absent</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-lg-2 col-md-4 col-sm-6">
                            <div class="form-group">
                                <label for="layoffOption">Layoff Filter</label>
                                <select class="form-control" id="layoffOption">
                                    <option value="All">All Employees</option>
                                    <option value="ExcludeLayoff" selected>Exclude Layoff</option>
                                    <option value="OnlyLayoff">Only Layoff</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-lg-10 col-md-8 col-sm-6">
                            <div class="form-group mt-4 pt-2">
                                <button type="button" class="btn btn-primary" id="btnSearch">
                                    <i class="fas fa-search"></i> Search
                                </button>
                                <button type="button" class="btn btn-secondary" id="btnReset">
                                    <i class="fas fa-undo"></i> Reset
                                </button>
                                <button type="button" class="btn btn-success" id="btnExport">
                                    <i class="fas fa-file-excel"></i> Export to Excel
                                </button>
                            </div>
                        </div>
                    </div>
                </form>
            </div>

            @*    <div class="row mb-3" id="summaryCards" style="display:none;">
                            <div class="col-lg-3 col-md-6">
                                <div class="info-box">
                                    <span class="info-box-icon bg-info"><i class="fas fa-users"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Total Employees</span>
                                        <span class="info-box-number" id="totalEmployees">0</span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-3 col-md-6">
                                <div class="info-box">
                                    <span class="info-box-icon bg-success"><i class="fas fa-user-check"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Present</span>
                                        <span class="info-box-number" id="totalPresent">0</span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-3 col-md-6">
                                <div class="info-box">
                                    <span class="info-box-icon bg-danger"><i class="fas fa-user-times"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Absent</span>
                                        <span class="info-box-number" id="totalAbsent">0</span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-3 col-md-6">
                                <div class="info-box">
                                    <span class="info-box-icon bg-warning"><i class="fas fa-percentage"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Attendance %</span>
                                        <span class="info-box-number" id="attendancePercentage">0%</span>
                                    </div>
                                </div>
                            </div>
                        </div> *@

            <div class="table-responsive">
                <table id="attendanceTable" class="table table-bordered table-striped w-100">
                    <thead>
                        <tr>
                            <th>Company</th>
                            <th>Employee Code</th>
                            <th>Punch No</th>
                            <th>Employee Name</th>
                            <th>Department</th>
                            <th>Designation</th>
                            <th>Category</th>
                            <th>Section</th>
                            <th>Date</th>
                            <th>First Punch</th>
                            <th>Status</th>
                            <th>Per Day CTC</th>
                            <th>Long Absent</th>
                            <th>Layoff</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                    <tfoot>
                        <tr>
                            <th>Company</th>
                            <th>Employee Code</th>
                            <th>Punch No</th>
                            <th>Employee Name</th>
                            <th>Department</th>
                            <th>Designation</th>
                            <th>Category</th>
                            <th>Section</th>
                            <th>Date</th>
                            <th>First Punch</th>
                            <th>Status</th>
                            <th>Per Day CTC</th>
                            <th>Long Absent</th>
                            <th>Layoff</th>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
</div>
@*  </div>
    </div> *@

@section Scripts {
    <link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/dataTables.bootstrap4.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/buttons/2.2.2/css/buttons.bootstrap4.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/responsive/2.3.0/css/responsive.bootstrap4.min.css">

    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap4.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.2.2/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.2.2/js/buttons.bootstrap4.min.js"></script>
    <script src="https://cdn.datatables.net/responsive/2.3.0/js/dataTables.responsive.min.js"></script>
    <script src="https://cdn.datatables.net/responsive/2.3.0/js/responsive.bootstrap4.min.js"></script>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        // The JavaScript section remains the same as it was already well-structured
        // for handling the data and interactions. The changes above in the HTML
        // are what fix the visual layout problem.
        $(document).ready(function() {
            var dataTable;

            // Initialize DataTable
            initializeDataTable();

            // Load initial filter options
            loadFilterOptions();

            // Event Handlers
            $('#btnSearch').click(function() {
                if (validateDates()) {
                    dataTable.ajax.reload(function() {
                        updateSummaryCards();
                    });
                }
            });

            $('#btnReset').click(function() {
                $('#filterForm')[0].reset();
                $('#fromDate').val(new Date().toISOString().split('T')[0]);
                $('#toDate').val(new Date().toISOString().split('T')[0]);
                loadFilterOptions();
                dataTable.ajax.reload(function() {
                    updateSummaryCards();
                });
            });

            $('#btnExport').click(function() {
                if (validateDates()) {
                    exportToExcel();
                }
            });

            // Company change event
            $('#companyCode').change(function() {
                loadDepartments();
                loadCategories();
                loadDesignations();
            });

            // Department change event
            $('#department').change(function() {
                if ($(this).val()) {
                    loadDesignationsByDepartment($(this).val());
                } else {
                    loadDesignations();
                }
            });

            // Enter key press on date fields
            $('#fromDate, #toDate').keypress(function(e) {
                if (e.which == 13) {
                    $('#btnSearch').click();
                    return false;
                }
            });

            function initializeDataTable() {
                dataTable = $('#attendanceTable').DataTable({
                    processing: true,
                    serverSide: true,
                    responsive: true,
                    ajax: {
                        url: '@Url.Action("GetAttendanceData", "AttendanceSummary")',
                        type: 'POST',
                        contentType: 'application/json',
                        data: function(d) {
                            return JSON.stringify({
                                draw: d.draw,
                                start: d.start,
                                length: d.length,
                                searchValue: d.search.value,
                                sortColumn: d.order[0].column,
                                sortDirection: d.order[0].dir,
                                columns: d.columns.map(c => c.data),
                                fromDate: $('#fromDate').val(),
                                toDate: $('#toDate').val(),
                                companyCode: $('#companyCode').val() || 0,
                                department: $('#department').val(),
                                category: $('#category').val(),
                                designation: $('#designation').val(),
                                attendanceStatus: $('#attendanceStatus').val(),
                                longAbsentOption: $('#longAbsentOption').val(),
                                layoffOption: $('#layoffOption').val()
                            });
                        },
                        error: function(xhr, error, thrown) {
                            console.error('DataTable error:', error);
                            toastr.error('Error loading data. Please try again.');
                        },
                        dataSrc: function(json) {
                            // Update summary cards with data
                            if (json.data && json.data.length > 0) {
                                $('#summaryCards').show();
                            }
                            return json.data;
                        }
                    },
                    columns: [
                        { data: 'companyName', name: 'CompanyName' },
                        { data: 'employeeCode', name: 'EmployeeCode' },
                        { data: 'punchNo', name: 'PunchNo' },
                        { data: 'employeeName', name: 'EmployeeName' },
                        { data: 'department', name: 'Department' },
                        { data: 'designation', name: 'Designation' },
                        { data: 'category', name: 'Category' },
                        { data: 'section', name: 'Section' },
                        {
                            data: 'attendanceDate',
                            name: 'AttendanceDate',
                            render: function(data) {
                                if (data) {
                                    var date = new Date(data);
                                    return date.toLocaleDateString('en-GB', {
                                        day: '2-digit',
                                        month: 'short',
                                        year: 'numeric'
                                    });
                                }
                                return '';
                            }
                        },
                        {
                            data: 'firstPunchTime',
                            name: 'FirstPunchTime',
                            render: function(data) {
                                if (data) {
                                    // Handle TimeSpan format from C#
                                    if (typeof data === 'string' && data.includes(':')) {
                                        var parts = data.split(':');
                                        var hours = parseInt(parts[0]);
                                        var minutes = parts[1].padStart(2, '0');
                                        var period = hours >= 12 ? 'PM' : 'AM';
                                        hours = hours > 12 ? hours - 12 : (hours === 0 ? 12 : hours);
                                        return hours + ':' + minutes + ' ' + period;
                                    }
                                }
                                return '<span class="text-muted">-</span>';
                            }
                        },
                        {
                            data: 'attendanceStatus',
                            name: 'AttendanceStatus',
                            render: function(data) {
                                if (data === 'Present') {
                                    return '<span class="badge badge-success"><i class="fas fa-check-circle"></i> Present</span>';
                                } else if (data === 'Absent') {
                                    return '<span class="badge badge-danger"><i class="fas fa-times-circle"></i> Absent</span>';
                                }
                                return data;
                            }
                        },
                        {
                            data: 'perDayCTC',
                            name: 'PerDayCTC',
                            render: function(data) {
                                return '₹ ' + parseFloat(data).toFixed(2);
                            }
                        },
                        {
                            data: 'longAbsent',
                            name: 'LongAbsent',
                            render: function(data, type, row) {
                                if (data === true || data === 1 || data === "1") {
                                    return '<span class="status-badge status-long-absent">' +
                                           '<i class="fas fa-exclamation-triangle"></i> Long Absent</span>';
                                } else {
                                    return '<span class="status-badge status-active">' +
                                           '<i class="fas fa-check-circle"></i> Active</span>';
                                }
                            },
                            className: 'text-center'
                        },
                        {
                            data: 'layoff',
                            name: 'Layoff',
                            render: function(data, type, row) {
                                if (data === true || data === 1 || data === "1") {
                                    return '<span class="status-badge status-layoff">' +
                                           '<i class="fas fa-user-slash"></i> Layoff</span>';
                                } else {
                                    return '<span class="status-badge status-active">' +
                                           '<i class="fas fa-user-check"></i> Active</span>';
                                }
                            },
                            className: 'text-center'
                        }
                    ],
                    order: [[8, 'desc']], // Sort by date by default
                    pageLength: 25,
                    lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, "All"]],
                    dom: '<"row"<"col-sm-12 col-md-6"l><"col-sm-12 col-md-6"f>>rtip',
                    language: {
                        processing: '<i class="fas fa-spinner fa-spin"></i> Loading...',
                        emptyTable: 'No attendance records found for the selected criteria',
                        zeroRecords: 'No matching records found'
                    }
                });
            }

            function loadFilterOptions() {
                var companyCode = $('#companyCode').val() || 0;
                loadDepartments();
                loadCategories();
                loadDesignations();
            }

            function loadDepartments() {
                var companyCode = $('#companyCode').val() || 0;
                $.get('@Url.Action("GetDepartmentsByCompany", "AttendanceSummary")', { companyCode: companyCode }, function(data) {
                    var select = $('#department');
                    var currentValue = select.val();
                    select.empty();
                    select.append('<option value="">All Departments</option>');
                    $.each(data, function(i, item) {
                        select.append($('<option></option>').val(item).text(item));
                    });
                    if (currentValue) {
                        select.val(currentValue);
                    }
                });
            }

            function loadCategories() {
                var companyCode = $('#companyCode').val() || 0;
                @if (Model.Categories != null)
                {
                            @:var categories = @Html.Raw(Json.Serialize(Model.Categories));
                            @:var select = $('#category');
                            @:var currentValue = select.val();
                            @:select.empty();
                            @:select.append('<option value="">All Categories</option>');
                            @:$.each(categories, function(i, item) {
                                @:select.append($('<option></option>').val(item.value).text(item.text));
                            @:});
                            @:if (currentValue) {
                                @:select.val(currentValue);
                            @:}
                }
            }

            function loadDesignations() {
                var companyCode = $('#companyCode').val() || 0;
                @if (Model.Designations != null)
                {
                            @:var designations = @Html.Raw(Json.Serialize(Model.Designations));
                            @:var select = $('#designation');
                            @:var currentValue = select.val();
                            @:select.empty();
                            @:select.append('<option value="">All Designations</option>');
                            @:$.each(designations, function(i, item) {
                                @:select.append($('<option></option>').val(item.value).text(item.text));
                            @:});
                            @:if (currentValue) {
                                @:select.val(currentValue);
                            @:}
                }
            }

            function loadDesignationsByDepartment(department) {
                var companyCode = $('#companyCode').val() || 0;
                $.get('@Url.Action("GetDesignationsByDepartment", "AttendanceSummary")',
                    { department: department, companyCode: companyCode },
                    function(data) {
                        var select = $('#designation');
                        select.empty();
                        select.append('<option value="">All Designations</option>');
                        $.each(data, function(i, item) {
                            select.append($('<option></option>').val(item).text(item));
                        });
                    }
                );
            }

            function updateSummaryCards() {
                var tableData = dataTable.data();
                if (tableData.length > 0) {
                    var uniqueEmployees = new Set();
                    var presentCount = 0;
                    var absentCount = 0;

                    tableData.each(function(row) {
                        uniqueEmployees.add(row.employeeCode);
                        if (row.attendanceStatus === 'Present') {
                            presentCount++;
                        } else if (row.attendanceStatus === 'Absent') {
                            absentCount++;
                        }
                    });

                    var total = uniqueEmployees.size;
                    var percentage = total > 0 ? ((presentCount / (presentCount + absentCount)) * 100).toFixed(1) : 0;

                    $('#totalEmployees').text(total);
                    $('#totalPresent').text(presentCount);
                    $('#totalAbsent').text(absentCount);
                    $('#attendancePercentage').text(percentage + '%');
                    $('#summaryCards').fadeIn();
                }
            }

            function validateDates() {
                var fromDate = $('#fromDate').val();
                var toDate = $('#toDate').val();

                if (!fromDate || !toDate) {
                    toastr.warning('Please select both From Date and To Date');
                    return false;
                }

                if (new Date(fromDate) > new Date(toDate)) {
                    toastr.warning('From Date cannot be greater than To Date');
                    return false;
                }

                // Check if date range is more than 31 days
                var daysDiff = Math.ceil((new Date(toDate) - new Date(fromDate)) / (1000 * 60 * 60 * 24));
                if (daysDiff > 31) {
                    Swal.fire({
                        title: 'Large Date Range',
                        text: 'You have selected more than 31 days. This may take longer to process. Do you want to continue?',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Yes, continue',
                        cancelButtonText: 'No, cancel'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            return true;
                        }
                    });
                    return false;
                }

                return true;
            }

            function exportToExcel() {
                var exportData = {
                    fromDate: $('#fromDate').val(),
                    toDate: $('#toDate').val(),
                    companyCode: $('#companyCode').val() || 0,
                    department: $('#department').val(),
                    category: $('#category').val(),
                    designation: $('#designation').val(),
                    attendanceStatus: $('#attendanceStatus').val(),
                    longAbsentOption: $('#longAbsentOption').val(),
                    layoffOption: $('#layoffOption').val()
                };

                // Show loading indicator
                Swal.fire({
                    title: 'Exporting...',
                    text: 'Please wait while we prepare your export',
                    allowOutsideClick: false,
                    showConfirmButton: false,
                    willOpen: () => {
                        Swal.showLoading();
                    }
                });

                $.ajax({
                    url: '@Url.Action("ExportToExcel", "AttendanceSummary")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(exportData),
                    xhrFields: {
                        responseType: 'blob'
                    },
                    success: function(data, status, xhr) {
                        Swal.close();

                        // Get filename from Content-Disposition header
                        var filename = "";
                        var disposition = xhr.getResponseHeader('Content-Disposition');
                        if (disposition && disposition.indexOf('attachment') !== -1) {
                            var filenameRegex = /filename[^;=\n]*=((['"]).*?\2|[^;\n]*)/;
                            var matches = filenameRegex.exec(disposition);
                            if (matches != null && matches[1]) {
                                filename = matches[1].replace(/['"]/g, '');
                            }
                        }

                        if (!filename) {
                            filename = 'AttendanceSummary_' + new Date().getTime() + '.xlsx';
                        }

                        // Create download link
                        var blob = new Blob([data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });
                        var link = document.createElement('a');
                        link.href = window.URL.createObjectURL(blob);
                        link.download = filename;
                        document.body.appendChild(link);
                        link.click();
                        document.body.removeChild(link);

                        toastr.success('Export completed successfully!');
                    },
                    error: function(xhr) {
                        Swal.close();
                        var errorMessage = 'Error exporting data. Please try again.';
                        try {
                            var response = JSON.parse(xhr.responseText);
                            if (response.message) {
                                errorMessage = response.message;
                            }
                        } catch (e) {
                            // Use default error message
                        }
                        toastr.error(errorMessage);
                    }
                });
            }

            // Configure toastr
            toastr.options = {
                "closeButton": true,
                "progressBar": true,
                "positionClass": "toast-top-right",
                "timeOut": "5000"
            };
        });
    </script>

    <style>
        .status-badge {
            display: inline-flex;
            align-items: center;
            gap: 6px;
            padding: 8px 16px;
            border-radius: 25px;
            font-size: 12px;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.3px;
            transition: all 0.3s ease;
            border: 2px solid;
        }

        .status-long-absent {
            background: #fff5f5;
            color: #e53e3e;
            border-color: #feb2b2;
        }

            .status-long-absent:hover {
                background: #fed7d7;
                transform: scale(1.05);
            }

        .status-active {
            background: #f0fff4;
            color: #38a169;
            border-color: #9ae6b4;
        }

            .status-active:hover {
                background: #c6f6d5;
                transform: scale(1.05);
            }
        .filter-section {
            background-color: #f8f9fa;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 20px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .badge-success {
            background-color: #28a745;
        }

        .badge-danger {
            background-color: #dc3545;
        }

        .dataTables_wrapper {
            margin-top: 20px;
        }

        .table th {
            background-color: #f1f1f1;
            font-weight: bold;
            border-bottom: 2px solid #dee2e6;
        }

        .info-box {
            display: flex; /* Use flexbox for better alignment */
            align-items: center;
            min-height: 90px;
            background: #fff;
            width: 100%;
            box-shadow: 0 1px 1px rgba(0,0,0,0.1);
            border-radius: 2px;
            margin-bottom: 15px;
        }

        .info-box-icon {
            border-radius: 2px 0 0 2px;
            display: flex; /* Use flex for centering */
            align-items: center;
            justify-content: center;
            height: 90px;
            width: 90px;
            font-size: 45px;
            background: rgba(0,0,0,0.2);
            color: #fff;
            flex-shrink: 0; /* Prevent icon from shrinking */
        }

        .info-box-content {
            padding: 5px 10px;
            flex-grow: 1; /* Allow content to take remaining space */
        }

        .info-box-text {
            display: block;
            font-size: 14px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            text-transform: uppercase;
            font-weight: bold;
        }

        .info-box-number {
            display: block;
            font-weight: bold;
            font-size: 24px;
        }

        .table-responsive {
            min-height: 400px;
        }

        #attendanceTable_processing {
            background: rgba(255,255,255,0.9);
            font-size: 18px;
            font-weight: bold;
        }

        .status-layoff {
            background: #fff3cd;
            color: #856404;
            border-color: #ffeaa7;
        }

            .status-layoff:hover {
                background: #ffeaa7;
                transform: scale(1.05);
            }
    </style>
}

